🥀 ToDoList App - React JS 🥀

🌿🥀🌳 Points to Remember 🌳🥀🌿

#1. React CRUD Application.
#2. Add Task Functionality.
#3. Delete Task Functionality.
#4. Completed Task Functionality.


🌿🍃🌳🔥🥀 Detailed Explaination of Important Points - Connect the Dots 🥀🔥🌳🍃🌿

✅#1. Prerequisites - Install and Configure Node JS, NPM, NPX & along with Versions.

✅#2. Create a React App - npx create-react-app command & run the app - default development server environment - localhost:3000.

✅#3. React Scripts/Commands - npm start, npm run build (minified version - production deployment build), npm test (test cases) & npm run eject.

✅#4. Explore the App - Files & Folders Structure.

✅#5. Clean up the App - Files & Folders Structure.

✅#6. Create a Directory of Components & Build them.

✅#7. Create a Directory of Assets which includes Images/CSS/Other Static Files and Folders.

✅#8. Create the multiple Components as per the App Layout ==> Add Task < ToDoList.

✅#9. Render the "Hello World" in Default App Component.

✅#10. React Component - Individual piece of reusable code which has it's own functionality, inputs and outputs.

✅#11. HTML vs. JSX:- You can't write HTML in JS File, it's JSX Syntax (HTML + JS) which means embedded { JS } in HTML in the JS Component.

✅#12. How to know which element in ArrayOfStrings, we wanna delete. We will pass an argument in deleteTask Function. Use the Array Filter Method with specified condition on Deleting an Element of an Array.

✅#13. Each child in a list should have a unique "key" prop. We must have a unique key as ID to delete 2 or more similar tasks. Use ID as an identifier.

